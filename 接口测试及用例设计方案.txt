一、接口测试及用例设计方案
	基本流程：
			怎么来测试接口呢？根据什么来测呢？这就需要开发提供的接口文档了，接口文档和功能测试的需求说明书的功能是一样的。
			包括：接口说明、调用的url，请求方式（get or post），请求参数、参数类型、请求参数说明，返回结果说明。
			有了接口文档后，我们就可以设计用例了，一般接口测试的用例分为以下几种
			
	用例分类：
			1、通过性验证，说白了就是传递正确的参数，是否返回正常的结果。
			2、参数组合，因为参数有必传和非必传，参数的类型和长度，以及传递时可能业务上的一些限制，
			所以在设计用例时，就要排列组合这些情况，保证所有情况都能覆盖到。
	
	
	安全性分类:
			1、绕过验证，比如提交订单时，在传递商品价格参数时，修改商品价格，就要看后端有没有验证了。
			或者我支付时，抓个包将订单金额一改，如果能以我改后的金额支付，那这个借口就有问题了。
			2、绕过身份验证，就是某个功能只有有特殊权限的用户才能操作，那我传递一个普通的用户，是不是也能操作呢
			3、参数是否加密，这个关系到一些账户的安全，比如我们在登录一些网站时，它要将我们的登录信息进行加密，如果不加密我们的信息就会暴露，危害性极大。
			4、密码安全规则，设置密码时复杂程度的校验。
			5、根据业务逻辑来设计用例
	

	测试工具:
			用例设计完了，用什么来测试接口呢？我们可以借助一些工具，比如postman和jmeter。postman使用比较简单，
			可以在列表中选择请求方式，在输入框中输入URL，如果是get请求，直接点击send就可以看返回结果了。
			
			
	1、什么是接口测试？
			接口测试是测试系统组件间接口的一种测试。接口测试主要用于检测外部系统与系统之间以及内部各个子系统之间的交互点。
			测试的重点是要检查数据的交换，传递和控制管理过程，以及系统间的相互逻辑依赖关系等.
	
	
	2、接口测试范围
			a)业务功能（包括正常、异常场景是否实现）
			b)业务规则（覆盖度是否全面）
			c)参数验证（边界、业务规则是否达到要求）
			d)异常场景（重复提交、并发提交、事务中断、多机环境、大数据量测试）
			e)性能测试（响应时间、吞吐量、并发数、资源要求）
			f)安全测试（权限验证、SQL注入等）
			
			
	3、接口测试的重点
			1、检查接口返回的数据是否与预期结果一致。
			2、检查接口的容错性，假如传递数据的类型错误时是否可以处理。
			3、接口参数的边界值。例如，传递的参数足够大或为负数时，接口是否可以正常处理。
			4、接口的性能，http请求接口大多与后端执行的SQL语句性能、算法等比较相关。
			5、接口的安全性，外部调用的接口尤为重要。
			
	4.环境配置方式
		unittest + requests + HTMLTestRunner是我最熟悉的方案，几乎没什么短板。以前通过这种方案写过很多测试用例，这次把ddt加上似乎更完美了。
			
			
			
	自动化测试环境搭建:https://blog.csdn.net/songlh1234/article/details/84317617