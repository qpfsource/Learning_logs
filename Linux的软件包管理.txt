一、软件包分类
	1.源码包
		优点：  
				1.开源、如果能力足够，可以修改源代码
				2.可以自由选择自己所需要的功能
				3.软件是通过编译的方式安装，所以更加适合自己的系统，更加稳定也效率更高
				4.卸载方便
		缺点：
				1.安装的过程步骤较多，尤其是安装较大的软件集合时(如LAMP环境搭建)，容易出现拼写错误
				2.编写过程时间较长，安装比二进制安装时间长
				3.因为时编译安装，安装过程中一旦报错新手很难解决
	1.1脚本安装包
	2.二进制包（RPM包、系统默认包）
		优点：
				1.包管理系统简单，只需要通过简单的几个命令来实现软件的安装、升级、查询和卸载
				2.安装软件的速度相比源代码的安装方式要快的多
		缺点：
				1.已经经过编译，不可以咯不到源代码 
				2.功能的选择不如源代码包灵活
				3.存在安装的依赖性    a->b->c(安装a时，首先需要安装b,安装b时需要先安装c，安装过程即c---->b------>a,卸载过程相反)
		2.1 rpm 包的命令管理
				2.1.1 包的命名规则
						例：httpd-2.2.15-15.el6.centos.1.i686.rpm
						httpd                   软件的包名
						2.2.15                  软件的版本
						15                      软件发布的次数
						el6.centos              适合的Linux平台
						i686                    适合的硬件平台
						rpm                     rpm包的扩展名
				2.1.2  rpm包的依赖性
						树形依赖：a---->b----->c
						环形依赖：a---->b------>c----->a  (使用一条安装命令同时安装abc这三个软件包)	
						模块依赖：模块依赖的查询网站：（www.rpmfind.net），库依赖的一般为.so.数字结尾的依赖性解决
		2.2  rpm 包的安装、升级、卸载
					rpm软件包的安装：rpm  -ivh  包全名    (i表示安装,v表示显示安装信息,h表示显示安装过程)
							选项：
								i(install)-------------->安装
								v(verbose)------------->显示详细信息
								h(hash)----------------->显示进度
								--nodeps----------------->不检测依赖性
					rpm软件包的升级：rpm  -Uvh  包全名    (U表示升级,v表示显示安装信息,h表示显示安装过程)
							选项：
								U(update)-------------->升级
								v(verbose)------------->显示详细信息
								h(hash)----------------->显示进度 
					rpm软件包的卸载：rpm  -e  包名    (e 表示卸载)
							选项：
								e(delete)-------------->卸载
								
					包全名：如果操作的是没有安装的软件包，使用包全名。而且需要注意路径（安装和升级时使用包全名）
					包  名：操作系统已经安装的软件包时，使用包名。这里一般是系统去搜索/var/lib/rpm/中的数据库（查询和卸载）
					
					
		2.3  rpm 包的查询方式（只有这种查询方式，yum安装也使用的是这种查询方式）
					1.查询已安装的rpm包：rpm   -q	选项  包名(查询是否安装)
										使用管道符查询和http相关的所有包         rpm -qa | grep httpd
										选项：
											 -q（query）  包名   查询软件包是否安装
											 -qa(all)   所有     查询所有已安装的软件包
					2.查询rpm包的安装信息：rpm   -qi（information）	选项  包名(查询已安装包的信息)
								选项：			rpm -qi        包名    查询已安装的包的信息
											    rpm -qip     包全名    查询未安装的包的信息
					3.查询包中的文件的安装位置： rpm  -ql(list)
								选项: -ql 列表（list）    包名
									  -qlp 查询未安装的包的信息   包全名（package）
				    4.查询系统文件属于那个rpm包   rpm -qf系统文件名
								选项：-qf 系统文件名
					5.查询安装软件包的依赖性    rpm -qR 包名 
					            选项：-qR 查询软件包的依赖性（requires）  包名
								      -qRp 查询未安装的软件包的信息（package） 包全名
		2.4  rpm包的校验和文件提取    rpm -V 已安装的包名
								选项：rpm -V 校验指定的rpm包中的文件（vrify）

				    文件提取：   rpm2cpio包全名  |\    （\表示命令过长，换行输入）
								 rpm -idv. 文件绝对路径
二、yum在线rpm的安装包的管理
			1.本地yum源（光盘yum源）
				1.1 挂载光盘
				    mount /dev/cdrom  /mnt/cdrom/
				1.2 让网络yum源失效
				    修改网络yum源文件的扩展名   例：mv Centos-Base.repo   CentOS-Base.repo.bak
                1.3 修改配置文件，打开Media 的yum源
				name = CentOS-$releasever -Media
				baseurl = file:///mnt/cdrom
				# 地址为自己的光盘挂载地址
					#   file:///media/cdrom/
					#   file:///media/cdrecorder
			    # 需要注释掉这两个不存在的地址
				修改enabled=1，让这个源文件生效   gpgcheck=1    gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6					
			
			
			
			
			
			
			2.网络yum源
			  vim  /etc/yum.repos.d/CentOS-Base.repos  查看这个文件的对应信息
			    配置信息：
				  [base]                        容器名称，一定要放在[]中
				   name                         容器的说明信息
				   mirrorlist                   镜像站点，这个可以注释掉
				   baseurl                      yum源服务器的地址。这里默认的是CenterOS官方的yum源服务器，是可以使用的，我们可以使用本地其他yum源地址来提高下载速度
				   enabled                      此容器是否生效，若不写或写成enable=1代表生效，写成enable=0则代表不生效
				   gpgcheck                     如果是1则代表的是RPM的数字证书生效，如果是0则代表不生效
				   gpgkey                       数字证书的公钥文件的保存位置。不用修改
			yum的相关命令
			      查询：yum  list               查询服务器中可以使用是rpm包列表
				        yum  search  关键字     搜索服务器上所有和关键字相关的软件包  
                  
                  安装软件包：  yum -y install 包名
								install   安装     -y    自动回答yes
				  升级软件包：  yum -y update 包名（一定要跟包名）
							选项：			
								update            升级
								-y                自动回答yes  
				  卸载软件包：  yum -y  remove   包名
				            选项：
							    yum -y  remove   包名（一定要跟包名，一般安装后不要使用此方法卸载软件包）
							    remove   卸载  
								-y       自动回答yes
			yum 软件组管理的相关命令
			     查询相关软件组：yum grouplist(列出所有可用的软件组列表)
				 安装软件组：   yum groupinstall 软件组名（安装指定的软件组，组名可以使用grouplist查询出来，如果组名称有空格，则需要使用""将软件组名引起来）
				 卸载对应的软件组：yum groupremove  软件组名(卸载指定的软件组)
							
							
					
					
