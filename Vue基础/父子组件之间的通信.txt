父子组件之间的通信
	在实际开发中，我们往往会遇到一些数据的确需要从上层传递到下层，例如:在一个页面中，我们从服务器端请求了好多数据，其中并非所有的
	数据都是需要整个大页面组件展示的，而是需要下面的子组件进行展示
	在此时，我们一般不会让子组件再次发送网络请求，而是直接让父组件将对应的数据传递给子组件。
	
父子组件通信的方法
	1.通过props向子组件传递数据
	2.通过自定义事件(emit)向父组件发送消息
		const cpn={
        template:'#cpn',
			props:[cmovies]
		}
		const app = new Vue({
			el:"#app",
			data:{
				message:"Hello World!",
				movies:['海王','海贼王','西游记']
			},
			components:{
				cpn:cpn
			}
		})
――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――
		<div id ="app">
			<cpn :cmovies="movies" ></cpn>
		</div>
		<template id="cpn">
			<div>
				<p>{{cmovies}}</p>
				<!-- <h2></h2> -->
			</div>
		</template>